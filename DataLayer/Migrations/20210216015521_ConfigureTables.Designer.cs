// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(ApplicationInitializer))]
    [Migration("20210216015521_ConfigureTables")]
    partial class ConfigureTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("DataLayer.TableSets.Actors", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActorId");

                    b.HasIndex("MovieId");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("DataLayer.TableSets.Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("CellNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("MoviesRented")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("StoreName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Address = "56 Wedge Road West",
                            CellNumber = "566-788-9090",
                            City = "St. Louis",
                            DateAdded = new DateTime(2021, 2, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Michael",
                            LastName = "Cohaart",
                            MoviesRented = 0,
                            State = "MO",
                            ZipCode = "23455"
                        },
                        new
                        {
                            Id = 3,
                            Address = "8532 Dewey Road",
                            CellNumber = "440-567-7861",
                            City = "Montville",
                            DateAdded = new DateTime(2021, 2, 15, 20, 55, 21, 625, DateTimeKind.Local).AddTicks(8181),
                            FirstName = "Rebecca",
                            LastName = "Buddenberg",
                            MoviesRented = 0,
                            State = "OH"
                        });
                });

            modelBuilder.Entity("DataLayer.TableSets.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("CustomersId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Rating")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("MovieId");

                    b.HasIndex("CustomersId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("DataLayer.TableSets.MovieActors", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieActors");
                });

            modelBuilder.Entity("DataLayer.TableSets.Actors", b =>
                {
                    b.HasOne("DataLayer.TableSets.Movie", null)
                        .WithMany("Actors")
                        .HasForeignKey("MovieId");
                });

            modelBuilder.Entity("DataLayer.TableSets.Movie", b =>
                {
                    b.HasOne("DataLayer.TableSets.Customers", null)
                        .WithMany("Movies")
                        .HasForeignKey("CustomersId");
                });

            modelBuilder.Entity("DataLayer.TableSets.MovieActors", b =>
                {
                    b.HasOne("DataLayer.TableSets.Actors", "Actors")
                        .WithMany("MovieActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.TableSets.Movie", "Movie")
                        .WithMany("MovieActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actors");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("DataLayer.TableSets.Actors", b =>
                {
                    b.Navigation("MovieActors");
                });

            modelBuilder.Entity("DataLayer.TableSets.Customers", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("DataLayer.TableSets.Movie", b =>
                {
                    b.Navigation("Actors");

                    b.Navigation("MovieActors");
                });
#pragma warning restore 612, 618
        }
    }
}
